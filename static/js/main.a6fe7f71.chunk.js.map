{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleOnChange","type","onChange","App","componentDidMount","fetch","then","response","json","users","setState","e","searchField","target","value","state","this","filteredMonster","filter","toLowerCase","includes","toLocaleLowerCase","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCPXC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLdM,G,MAAY,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eACrC,OAAQ,uBACRZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCCG,E,kDAnCb,aAAe,IAAD,8BACZ,gBAOFC,kBAAoB,WAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEd,SAAUa,QAXjC,EAcdT,eAAiB,SAACW,GAChB,EAAKD,SAAS,CAACE,YAAaD,EAAEE,OAAOC,SAbrC,EAAKC,MAAQ,CACXnB,SAAU,GACVgB,YAAa,IAJH,E,0CAkBd,WACE,MAAkCI,KAAKD,MAA/BnB,EAAR,EAAQA,SAAUgB,EAAlB,EAAkBA,YACZK,EAAkBrB,EAASsB,QAAO,SAAA3B,GAAO,OAAIA,EAAQE,KAAK0B,cAAcC,SAASR,EAAYS,wBACnG,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,eAAgBgB,KAAKhB,iBAEvB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA7BVK,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a6fe7f71.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      />\r\n      <h1>{props.monster.name}</h1>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport \"./card-list.style.css\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleOnChange }) => {\r\n    return  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleOnChange}\r\n  />\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { CardList } from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component'\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ monsters: users }))\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    this.setState({searchField: e.target.value})\r\n  }\r\n\r\n  render() {\r\n    const { monsters, searchField } = this.state\r\n    const filteredMonster = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Monsters Rolodex</h1>\r\n        <SearchBox\r\n          placeholder='search monsters'\r\n          handleOnChange={this.handleOnChange}\r\n        />\r\n        <CardList monsters={filteredMonster} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}